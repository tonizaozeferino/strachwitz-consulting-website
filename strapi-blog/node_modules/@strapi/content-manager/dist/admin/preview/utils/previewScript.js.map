{"version":3,"file":"previewScript.js","sources":["../../../../admin/src/preview/utils/previewScript.ts"],"sourcesContent":["// NOTE: This override is for the properties on _user's site_, it's not about Strapi Admin.\ndeclare global {\n  interface Window {\n    __strapi_previewCleanup?: () => void;\n    STRAPI_HIGHLIGHT_HOVER_COLOR?: string;\n  }\n}\n\n/**\n * previewScript will be injected into the preview iframe after being stringified.\n * Therefore it CANNOT use any imports, or refer to any variables outside of its own scope.\n * It's why many functions are defined within previewScript, it's the only way to avoid going full spaghetti.\n * To get a better overview of everything previewScript does, go to the orchestration part at its end.\n */\nconst previewScript = (shouldRun = true) => {\n  /* -----------------------------------------------------------------------------------------------\n   * Params\n   * ---------------------------------------------------------------------------------------------*/\n  const HIGHLIGHT_PADDING = 2; // in pixels\n  const HIGHLIGHT_HOVER_COLOR = window.STRAPI_HIGHLIGHT_HOVER_COLOR ?? '#4945ff'; // dark primary500\n  const SOURCE_ATTRIBUTE = 'data-strapi-source';\n  const OVERLAY_ID = 'strapi-preview-overlay';\n  const INTERNAL_EVENTS = {\n    DUMMY_EVENT: 'dummyEvent',\n  } as const;\n\n  /**\n   * Calling the function in no-run mode lets us retrieve the constants from other files and keep\n   * a single source of truth for them. It's the only way to do this because this script can't\n   * refer to any variables outside of its own scope, because it's stringified before it's run.\n   */\n  if (!shouldRun) {\n    return { INTERNAL_EVENTS };\n  }\n\n  /* -----------------------------------------------------------------------------------------------\n   * Functionality pieces\n   * ---------------------------------------------------------------------------------------------*/\n\n  const createOverlaySystem = () => {\n    // Clean up before creating a new overlay so we can safely call previewScript multiple times\n    window.__strapi_previewCleanup?.();\n    document.getElementById(OVERLAY_ID)?.remove();\n\n    const overlay = document.createElement('div');\n    overlay.id = OVERLAY_ID;\n    overlay.style.cssText = `\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      pointer-events: none;\n      z-index: 9999;\n    `;\n\n    window.document.body.appendChild(overlay);\n    return overlay;\n  };\n\n  type EventListenersList = Array<{\n    element: HTMLElement;\n    type: keyof HTMLElementEventMap;\n    handler: EventListener;\n  }>;\n\n  const createHighlightManager = (overlay: HTMLElement) => {\n    const elements = window.document.querySelectorAll(`[${SOURCE_ATTRIBUTE}]`);\n    const highlights: HTMLElement[] = [];\n    const eventListeners: EventListenersList = [];\n\n    const drawHighlight = (target: Element, highlight: HTMLElement) => {\n      if (!highlight) return;\n\n      const rect = target.getBoundingClientRect();\n      highlight.style.width = `${rect.width + HIGHLIGHT_PADDING * 2}px`;\n      highlight.style.height = `${rect.height + HIGHLIGHT_PADDING * 2}px`;\n      highlight.style.transform = `translate(${rect.left - HIGHLIGHT_PADDING}px, ${rect.top - HIGHLIGHT_PADDING}px)`;\n    };\n\n    const updateAllHighlights = () => {\n      highlights.forEach((highlight, index) => {\n        const element = elements[index];\n        if (element && highlight) {\n          drawHighlight(element, highlight);\n        }\n      });\n    };\n\n    elements.forEach((element) => {\n      if (element instanceof HTMLElement) {\n        const highlight = document.createElement('div');\n        highlight.style.cssText = `\n          position: absolute;\n          outline: 2px solid transparent;\n          pointer-events: none;\n          border-radius: 2px;\n          background-color: transparent;\n          will-change: transform;\n          transition: outline-color 0.1s ease-in-out;\n        `;\n\n        // Move hover detection to the underlying element\n        const mouseEnterHandler = () => {\n          highlight.style.outlineColor = HIGHLIGHT_HOVER_COLOR;\n        };\n        const mouseLeaveHandler = () => {\n          highlight.style.outlineColor = 'transparent';\n        };\n        const doubleClickHandler = () => {\n          // TODO: handle for real\n          // eslint-disable-next-line no-console\n          console.log('Double click on highlight', element);\n        };\n        const mouseDownHandler = (event: MouseEvent) => {\n          // Prevent default multi click to select behavior\n          if (event.detail >= 2) {\n            event.preventDefault();\n          }\n        };\n\n        element.addEventListener('mouseenter', mouseEnterHandler);\n        element.addEventListener('mouseleave', mouseLeaveHandler);\n        element.addEventListener('dblclick', doubleClickHandler);\n        element.addEventListener('mousedown', mouseDownHandler);\n\n        // Store event listeners for cleanup\n        eventListeners.push(\n          { element, type: 'mouseenter', handler: mouseEnterHandler },\n          { element, type: 'mouseleave', handler: mouseLeaveHandler },\n          { element, type: 'dblclick', handler: doubleClickHandler },\n          { element, type: 'mousedown', handler: mouseDownHandler as EventListener }\n        );\n\n        highlights.push(highlight);\n        overlay.appendChild(highlight);\n\n        drawHighlight(element, highlight);\n      }\n    });\n\n    return {\n      elements,\n      updateAllHighlights,\n      eventListeners,\n    };\n  };\n\n  type HighlightManager = ReturnType<typeof createHighlightManager>;\n\n  const setupObservers = (highlightManager: HighlightManager) => {\n    const resizeObserver = new ResizeObserver(() => {\n      highlightManager.updateAllHighlights();\n    });\n\n    highlightManager.elements.forEach((element: Element) => {\n      resizeObserver.observe(element);\n    });\n\n    resizeObserver.observe(document.documentElement);\n\n    const updateOnScroll = () => {\n      highlightManager.updateAllHighlights();\n    };\n\n    const scrollableElements = new Set<Element | Window>();\n    scrollableElements.add(window);\n\n    // Find all scrollable ancestors for all tracked elements\n    highlightManager.elements.forEach((element) => {\n      let parent = element.parentElement;\n      while (parent) {\n        const computedStyle = window.getComputedStyle(parent);\n        const overflow = computedStyle.overflow + computedStyle.overflowX + computedStyle.overflowY;\n\n        if (overflow.includes('scroll') || overflow.includes('auto')) {\n          scrollableElements.add(parent);\n        }\n\n        parent = parent.parentElement;\n      }\n    });\n\n    // Add scroll listeners to all scrollable elements\n    scrollableElements.forEach((element) => {\n      if (element === window) {\n        window.addEventListener('scroll', updateOnScroll);\n        window.addEventListener('resize', updateOnScroll);\n      } else {\n        (element as Element).addEventListener('scroll', updateOnScroll);\n      }\n    });\n\n    return {\n      resizeObserver,\n      updateOnScroll,\n      scrollableElements,\n    };\n  };\n\n  const setupEventHandlers = (highlightManager: HighlightManager) => {\n    // TODO: The listeners for postMessage events will go here\n    return highlightManager.eventListeners;\n  };\n\n  const createCleanupSystem = (\n    overlay: HTMLElement,\n    observers: ReturnType<typeof setupObservers>,\n    eventHandlers: EventListenersList\n  ) => {\n    window.__strapi_previewCleanup = () => {\n      observers.resizeObserver.disconnect();\n\n      // Remove all scroll listeners\n      observers.scrollableElements.forEach((element) => {\n        if (element === window) {\n          window.removeEventListener('scroll', observers.updateOnScroll);\n          window.removeEventListener('resize', observers.updateOnScroll);\n        } else {\n          (element as Element).removeEventListener('scroll', observers.updateOnScroll);\n        }\n      });\n\n      // Remove highlight event listeners\n      eventHandlers.forEach(({ element, type, handler }) => {\n        element.removeEventListener(type, handler);\n      });\n\n      overlay.remove();\n    };\n  };\n\n  /* -----------------------------------------------------------------------------------------------\n   * Orchestration\n   * ---------------------------------------------------------------------------------------------*/\n\n  const overlay = createOverlaySystem();\n  const highlightManager = createHighlightManager(overlay);\n  const observers = setupObservers(highlightManager);\n  const eventHandlers = setupEventHandlers(highlightManager);\n  createCleanupSystem(overlay, observers, eventHandlers);\n};\n\nexport { previewScript };\n"],"names":["previewScript","shouldRun","HIGHLIGHT_PADDING","HIGHLIGHT_HOVER_COLOR","window","STRAPI_HIGHLIGHT_HOVER_COLOR","SOURCE_ATTRIBUTE","OVERLAY_ID","INTERNAL_EVENTS","DUMMY_EVENT","createOverlaySystem","__strapi_previewCleanup","document","getElementById","remove","overlay","createElement","id","style","cssText","body","appendChild","createHighlightManager","elements","querySelectorAll","highlights","eventListeners","drawHighlight","target","highlight","rect","getBoundingClientRect","width","height","transform","left","top","updateAllHighlights","forEach","index","element","HTMLElement","mouseEnterHandler","outlineColor","mouseLeaveHandler","doubleClickHandler","console","log","mouseDownHandler","event","detail","preventDefault","addEventListener","push","type","handler","setupObservers","highlightManager","resizeObserver","ResizeObserver","observe","documentElement","updateOnScroll","scrollableElements","Set","add","parent","parentElement","computedStyle","getComputedStyle","overflow","overflowX","overflowY","includes","setupEventHandlers","createCleanupSystem","observers","eventHandlers","disconnect","removeEventListener"],"mappings":"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"}
{"version":3,"file":"Preview.mjs","sources":["../../../../admin/src/preview/pages/Preview.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {\n  Page,\n  useQueryParams,\n  useRBAC,\n  createContext,\n  Form as FormContext,\n  Blocker,\n} from '@strapi/admin/strapi-admin';\nimport {\n  Box,\n  Flex,\n  FocusTrap,\n  IconButton,\n  Portal,\n  SingleSelect,\n  SingleSelectOption,\n} from '@strapi/design-system';\nimport { ArrowLineLeft } from '@strapi/icons';\nimport { useIntl } from 'react-intl';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { styled } from 'styled-components';\n\nimport { GetPreviewUrl } from '../../../../shared/contracts/preview';\nimport { COLLECTION_TYPES } from '../../constants/collections';\nimport { DocumentRBAC } from '../../features/DocumentRBAC';\nimport { type UseDocument, useDocument } from '../../hooks/useDocument';\nimport { type EditLayout, useDocumentLayout } from '../../hooks/useDocumentLayout';\nimport { FormLayout } from '../../pages/EditView/components/FormLayout';\nimport { handleInvisibleAttributes } from '../../pages/EditView/utils/data';\nimport { buildValidParams } from '../../utils/api';\nimport { createYupSchema } from '../../utils/validation';\nimport { PreviewHeader } from '../components/PreviewHeader';\nimport { useGetPreviewUrlQuery } from '../services/preview';\nimport { INTERNAL_EVENTS, PUBLIC_EVENTS } from '../utils/constants';\nimport { previewScript } from '../utils/previewScript';\n\nimport type { UID } from '@strapi/types';\n\n/* -------------------------------------------------------------------------------------------------\n * Constants\n * -----------------------------------------------------------------------------------------------*/\n\nconst DEVICES = [\n  {\n    name: 'desktop',\n    label: {\n      id: 'content-manager.preview.device.desktop',\n      defaultMessage: 'Desktop',\n    },\n    width: '100%',\n    height: '100%',\n  },\n  {\n    name: 'mobile',\n    label: {\n      id: 'content-manager.preview.device.mobile',\n      defaultMessage: 'Mobile',\n    },\n    width: '375px',\n    height: '667px',\n  },\n];\n\n/* -------------------------------------------------------------------------------------------------\n * PreviewProvider\n * -----------------------------------------------------------------------------------------------*/\n\ninterface PreviewContextValue {\n  url: string;\n  title: string;\n  document: NonNullable<ReturnType<UseDocument>['document']>;\n  meta: NonNullable<ReturnType<UseDocument>['meta']>;\n  schema: NonNullable<ReturnType<UseDocument>['schema']>;\n  layout: EditLayout;\n  onPreview: () => void;\n}\n\nconst [PreviewProvider, usePreviewContext] = createContext<PreviewContextValue>('PreviewPage');\n\n/* -------------------------------------------------------------------------------------------------\n * PreviewPage\n * -----------------------------------------------------------------------------------------------*/\n\nconst AnimatedArrow = styled(ArrowLineLeft)<{ $isSideEditorOpen: boolean }>`\n  will-change: transform;\n  rotate: ${(props) => (props.$isSideEditorOpen ? '0deg' : '180deg')};\n  transition: rotate 0.2s ease-in-out;\n`;\n\ntype MessageType =\n  | (typeof INTERNAL_EVENTS)[keyof typeof INTERNAL_EVENTS]\n  | (typeof PUBLIC_EVENTS)[keyof typeof PUBLIC_EVENTS];\n\n/**\n * A function factory so we can generate a new sendMessage everytime we need one.\n * We can't store and reuse a single sendMessage because it needs to have a stable identity\n * as it used in a useEffect function. And we can't rely on useCallback because we need the\n * up-to-date iframe ref, and this would make it stale (refs don't trigger callback reevaluations).\n */\nfunction getSendMessage(iframe: React.RefObject<HTMLIFrameElement>) {\n  return (type: MessageType, payload?: unknown) => {\n    if (!iframe.current) return;\n\n    const { origin } = new URL(iframe.current.src);\n\n    iframe.current.contentWindow?.postMessage(\n      {\n        type,\n        ...(payload !== undefined && { payload }),\n      },\n      origin\n    );\n  };\n}\n\nconst PreviewPage = () => {\n  const location = useLocation();\n  const { formatMessage } = useIntl();\n\n  const iframeRef = React.useRef<HTMLIFrameElement>(null);\n  const [isSideEditorOpen, setIsSideEditorOpen] = React.useState(true);\n\n  // Read all the necessary data from the URL to find the right preview URL\n  const {\n    slug: model,\n    id: documentId,\n    collectionType,\n  } = useParams<{\n    slug: UID.ContentType;\n    id: string;\n    collectionType: string;\n  }>();\n  const [{ query }] = useQueryParams<{\n    plugins?: Record<string, unknown>;\n    status?: string;\n  }>();\n\n  const params = React.useMemo(() => buildValidParams(query), [query]);\n\n  const [deviceName, setDeviceName] = React.useState<(typeof DEVICES)[number]['name']>(\n    DEVICES[0].name\n  );\n  const device = DEVICES.find((d) => d.name === deviceName) ?? DEVICES[0];\n\n  // Listen for ready message from iframe before injecting script\n  React.useEffect(() => {\n    const handleMessage = (event: MessageEvent) => {\n      if (event.data?.type === PUBLIC_EVENTS.PREVIEW_READY) {\n        const script = `(${previewScript.toString()})()`;\n        const sendMessage = getSendMessage(iframeRef);\n        sendMessage(PUBLIC_EVENTS.STRAPI_SCRIPT, { script });\n      }\n    };\n\n    window.addEventListener('message', handleMessage);\n\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, []);\n\n  if (!collectionType) {\n    throw new Error('Could not find collectionType in url params');\n  }\n\n  if (!model) {\n    throw new Error('Could not find model in url params');\n  }\n\n  // Only collection types must have a documentId\n  if (collectionType === COLLECTION_TYPES && !documentId) {\n    throw new Error('Could not find documentId in url params');\n  }\n\n  const previewUrlResponse = useGetPreviewUrlQuery({\n    params: {\n      contentType: model,\n    },\n    query: {\n      documentId,\n      locale: params.locale,\n      status: params.status as GetPreviewUrl.Request['query']['status'],\n    },\n  });\n  const documentResponse = useDocument({\n    model,\n    collectionType,\n    documentId,\n    params,\n  });\n  const documentLayoutResponse = useDocumentLayout(model);\n\n  const isLoading =\n    previewUrlResponse.isLoading || documentLayoutResponse.isLoading || documentResponse.isLoading;\n  if (isLoading && (!documentResponse.document?.documentId || previewUrlResponse.isLoading)) {\n    return <Page.Loading />;\n  }\n\n  const initialValues = documentResponse.getInitialFormValues();\n\n  if (\n    previewUrlResponse.error ||\n    documentLayoutResponse.error ||\n    !documentResponse.document ||\n    !documentResponse.meta ||\n    !documentResponse.schema ||\n    !initialValues\n  ) {\n    return <Page.Error />;\n  }\n\n  if (!previewUrlResponse.data?.data?.url) {\n    return <Page.NoData />;\n  }\n\n  const documentTitle = documentResponse.getTitle(documentLayoutResponse.edit.settings.mainField);\n\n  const validateSync = (values: Record<string, unknown>, options: Record<string, string>) => {\n    const { data: cleanedValues, removedAttributes } = handleInvisibleAttributes(values, {\n      schema: documentResponse.schema,\n      initialValues,\n      components: documentResponse.components,\n    });\n\n    const yupSchema = createYupSchema(\n      documentResponse.schema?.attributes,\n      documentResponse.components,\n      {\n        status: documentResponse.document?.status,\n        removedAttributes,\n        ...options,\n      }\n    );\n\n    return yupSchema.validateSync(cleanedValues, { abortEarly: false });\n  };\n\n  const previewUrl = previewUrlResponse.data.data.url;\n\n  const onPreview = () => {\n    iframeRef?.current?.contentWindow?.postMessage(\n      { type: 'strapiUpdate' },\n      // The iframe origin is safe to use since it must be provided through the allowedOrigins config\n      new URL(iframeRef.current.src).origin\n    );\n  };\n\n  const hasAdvancedPreview = window.strapi.features.isEnabled('cms-advanced-preview');\n\n  return (\n    <>\n      <Page.Title>\n        {formatMessage(\n          {\n            id: 'content-manager.preview.page-title',\n            defaultMessage: '{contentType} preview',\n          },\n          {\n            contentType: documentTitle,\n          }\n        )}\n      </Page.Title>\n      <PreviewProvider\n        url={previewUrl}\n        document={documentResponse.document}\n        title={documentTitle}\n        meta={documentResponse.meta}\n        schema={documentResponse.schema}\n        layout={documentLayoutResponse.edit}\n        onPreview={onPreview}\n      >\n        <FormContext\n          method=\"PUT\"\n          disabled={\n            query.status === 'published' &&\n            documentResponse &&\n            documentResponse.document.status !== 'draft'\n          }\n          initialValues={documentResponse.getInitialFormValues()}\n          initialErrors={location?.state?.forceValidation ? validateSync(initialValues, {}) : {}}\n          height=\"100%\"\n          validate={(values: Record<string, unknown>, options: Record<string, string>) => {\n            const { data: cleanedValues, removedAttributes } = handleInvisibleAttributes(values, {\n              schema: documentResponse.schema,\n              initialValues,\n              components: documentResponse.components,\n            });\n\n            const yupSchema = createYupSchema(\n              documentResponse.schema?.attributes,\n              documentResponse.components,\n              {\n                status: documentResponse.document?.status,\n                removedAttributes,\n                ...options,\n              }\n            );\n\n            return yupSchema.validate(cleanedValues, { abortEarly: false });\n          }}\n        >\n          {({ resetForm }) => (\n            <Flex direction=\"column\" height=\"100%\" alignItems=\"stretch\">\n              <Blocker onProceed={resetForm} />\n              <PreviewHeader />\n              <Flex flex={1} overflow=\"auto\" alignItems=\"stretch\">\n                {hasAdvancedPreview && (\n                  <Box\n                    overflow=\"auto\"\n                    width={isSideEditorOpen ? '50%' : 0}\n                    borderWidth=\"0 1px 0 0\"\n                    borderColor=\"neutral150\"\n                    paddingTop={6}\n                    paddingBottom={6}\n                    // Remove horizontal padding when the editor is closed or it won't fully disappear\n                    paddingLeft={isSideEditorOpen ? 6 : 0}\n                    paddingRight={isSideEditorOpen ? 6 : 0}\n                    transition=\"all 0.2s ease-in-out\"\n                  >\n                    <FormLayout\n                      layout={documentLayoutResponse.edit.layout}\n                      document={documentResponse}\n                      hasBackground={false}\n                    />\n                  </Box>\n                )}\n                <Flex\n                  direction=\"column\"\n                  alignItems=\"stretch\"\n                  flex={1}\n                  height=\"100%\"\n                  overflow=\"hidden\"\n                >\n                  <Flex\n                    direction=\"row\"\n                    background=\"neutral0\"\n                    padding={2}\n                    borderWidth=\"0 0 1px 0\"\n                    borderColor=\"neutral150\"\n                  >\n                    {hasAdvancedPreview && (\n                      <IconButton\n                        variant=\"ghost\"\n                        label={formatMessage(\n                          isSideEditorOpen\n                            ? {\n                                id: 'content-manager.preview.content.close-editor',\n                                defaultMessage: 'Close editor',\n                              }\n                            : {\n                                id: 'content-manager.preview.content.open-editor',\n                                defaultMessage: 'Open editor',\n                              }\n                        )}\n                        onClick={() => setIsSideEditorOpen((prev) => !prev)}\n                      >\n                        <AnimatedArrow $isSideEditorOpen={isSideEditorOpen} />\n                      </IconButton>\n                    )}\n                    <Flex justifyContent=\"center\" flex={1}>\n                      <SingleSelect\n                        value={deviceName}\n                        onChange={(name) => setDeviceName(name.toString())}\n                        aria-label={formatMessage({\n                          id: 'content-manager.preview.device.select',\n                          defaultMessage: 'Select device type',\n                        })}\n                      >\n                        {DEVICES.map((deviceOption) => (\n                          <SingleSelectOption key={deviceOption.name} value={deviceOption.name}>\n                            {formatMessage(deviceOption.label)}\n                          </SingleSelectOption>\n                        ))}\n                      </SingleSelect>\n                    </Flex>\n                  </Flex>\n                  <Flex direction=\"column\" justifyContent=\"center\" background=\"neutral0\" flex={1}>\n                    <Box\n                      data-testid=\"preview-iframe\"\n                      ref={iframeRef}\n                      src={previewUrl}\n                      /**\n                       * For some reason, changing an iframe's src tag causes the browser to add a new item in the\n                       * history stack. This is an issue for us as it means clicking the back button will not let us\n                       * go back to the edit view. To fix it, we need to trick the browser into thinking this is a\n                       * different iframe when the preview URL changes. So we set a key prop to force React\n                       * to mount a different node when the src changes.\n                       */\n                      key={previewUrl}\n                      title={formatMessage({\n                        id: 'content-manager.preview.panel.title',\n                        defaultMessage: 'Preview',\n                      })}\n                      width={device.width}\n                      height={device.height}\n                      borderWidth={0}\n                      tag=\"iframe\"\n                    />\n                  </Flex>\n                </Flex>\n              </Flex>\n            </Flex>\n          )}\n        </FormContext>\n      </PreviewProvider>\n    </>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * ProtectedPreviewPage\n * -----------------------------------------------------------------------------------------------*/\n\nconst ProtectedPreviewPageImpl = () => {\n  const { slug: model } = useParams<{\n    slug: string;\n  }>();\n  const {\n    permissions = [],\n    isLoading,\n    error,\n  } = useRBAC([\n    { action: 'plugin::content-manager.explorer.read', subject: model },\n    { action: 'plugin::content-manager.explorer.update', subject: model },\n    { action: 'plugin::content-manager.explorer.publish', subject: model },\n  ]);\n\n  if (isLoading) {\n    return <Page.Loading />;\n  }\n\n  if (error || !model) {\n    return (\n      <Box\n        height=\"100vh\"\n        width=\"100vw\"\n        position=\"fixed\"\n        top={0}\n        left={0}\n        zIndex={2}\n        background=\"neutral0\"\n      >\n        <Page.Error />\n      </Box>\n    );\n  }\n\n  return (\n    <Box\n      height=\"100vh\"\n      width=\"100vw\"\n      position=\"fixed\"\n      top={0}\n      left={0}\n      zIndex={2}\n      background=\"neutral0\"\n    >\n      <Page.Protect\n        permissions={permissions.filter((permission) =>\n          permission.action.includes('explorer.read')\n        )}\n      >\n        <DocumentRBAC permissions={permissions}>\n          <PreviewPage />\n        </DocumentRBAC>\n      </Page.Protect>\n    </Box>\n  );\n};\n\nconst ProtectedPreviewPage = () => {\n  return (\n    <Portal>\n      <FocusTrap>\n        <ProtectedPreviewPageImpl />\n      </FocusTrap>\n    </Portal>\n  );\n};\n\nexport { ProtectedPreviewPage, usePreviewContext };\n"],"names":["DEVICES","name","label","id","defaultMessage","width","height","PreviewProvider","usePreviewContext","createContext","AnimatedArrow","styled","ArrowLineLeft","props","$isSideEditorOpen","getSendMessage","iframe","type","payload","current","origin","URL","src","contentWindow","postMessage","undefined","PreviewPage","location","useLocation","formatMessage","useIntl","iframeRef","React","useRef","isSideEditorOpen","setIsSideEditorOpen","useState","slug","model","documentId","collectionType","useParams","query","useQueryParams","params","useMemo","buildValidParams","deviceName","setDeviceName","device","find","d","useEffect","handleMessage","event","data","PUBLIC_EVENTS","PREVIEW_READY","script","previewScript","toString","sendMessage","STRAPI_SCRIPT","window","addEventListener","removeEventListener","Error","COLLECTION_TYPES","previewUrlResponse","useGetPreviewUrlQuery","contentType","locale","status","documentResponse","useDocument","documentLayoutResponse","useDocumentLayout","isLoading","document","_jsx","Page","Loading","initialValues","getInitialFormValues","error","meta","schema","url","NoData","documentTitle","getTitle","edit","settings","mainField","validateSync","values","options","cleanedValues","removedAttributes","handleInvisibleAttributes","components","yupSchema","createYupSchema","attributes","abortEarly","previewUrl","onPreview","hasAdvancedPreview","strapi","features","isEnabled","_jsxs","_Fragment","Title","title","layout","FormContext","method","disabled","initialErrors","state","forceValidation","validate","resetForm","Flex","direction","alignItems","Blocker","onProceed","PreviewHeader","flex","overflow","Box","borderWidth","borderColor","paddingTop","paddingBottom","paddingLeft","paddingRight","transition","FormLayout","hasBackground","background","padding","IconButton","variant","onClick","prev","justifyContent","SingleSelect","value","onChange","aria-label","map","deviceOption","SingleSelectOption","data-testid","ref","tag","ProtectedPreviewPageImpl","permissions","useRBAC","action","subject","position","top","left","zIndex","Protect","filter","permission","includes","DocumentRBAC","ProtectedPreviewPage","Portal","FocusTrap"],"mappings":"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"}